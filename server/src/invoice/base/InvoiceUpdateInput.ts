/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CustomerWhereUniqueInput } from "../../customer/base/CustomerWhereUniqueInput";
import { ValidateNested, IsOptional, IsDate } from "class-validator";
import { Type } from "class-transformer";
import { InvoiceLineItemUpdateManyWithoutInvoicesInput } from "./InvoiceLineItemUpdateManyWithoutInvoicesInput";
import { SubscriptionUpdateManyWithoutInvoicesInput } from "./SubscriptionUpdateManyWithoutInvoicesInput";
@InputType()
class InvoiceUpdateInput {
  @ApiProperty({
    required: false,
    type: () => CustomerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CustomerWhereUniqueInput)
  @IsOptional()
  @Field(() => CustomerWhereUniqueInput, {
    nullable: true,
  })
  customer?: CustomerWhereUniqueInput | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dueDate?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  invoiceDate?: Date | null;

  @ApiProperty({
    required: false,
    type: () => InvoiceLineItemUpdateManyWithoutInvoicesInput,
  })
  @ValidateNested()
  @Type(() => InvoiceLineItemUpdateManyWithoutInvoicesInput)
  @IsOptional()
  @Field(() => InvoiceLineItemUpdateManyWithoutInvoicesInput, {
    nullable: true,
  })
  invoiceLineItems?: InvoiceLineItemUpdateManyWithoutInvoicesInput;

  @ApiProperty({
    required: false,
    type: () => SubscriptionUpdateManyWithoutInvoicesInput,
  })
  @ValidateNested()
  @Type(() => SubscriptionUpdateManyWithoutInvoicesInput)
  @IsOptional()
  @Field(() => SubscriptionUpdateManyWithoutInvoicesInput, {
    nullable: true,
  })
  subscriptions?: SubscriptionUpdateManyWithoutInvoicesInput;
}
export { InvoiceUpdateInput };
